<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qhzk.pe.mapper.GenConfigMapper">
  <resultMap id="BaseResultMap" type="com.qhzk.pe.entities.GenConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="config_id" jdbcType="BIGINT" property="configId" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="cover" jdbcType="BIT" property="cover" />
    <result column="module_name" jdbcType="VARCHAR" property="moduleName" />
    <result column="pack" jdbcType="VARCHAR" property="pack" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="api_path" jdbcType="VARCHAR" property="apiPath" />
    <result column="prefix" jdbcType="VARCHAR" property="prefix" />
    <result column="api_alias" jdbcType="VARCHAR" property="apiAlias" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    config_id, table_name, author, cover, module_name, pack, path, api_path, prefix, 
    api_alias
  </sql>
  <select id="selectByExample" parameterType="com.qhzk.pe.entities.GenConfigCriteria" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from code_gen_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from code_gen_config
    where config_id = #{configId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from code_gen_config
    where config_id = #{configId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qhzk.pe.entities.GenConfigCriteria">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from code_gen_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qhzk.pe.entities.GenConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into code_gen_config (config_id, table_name, author, 
      cover, module_name, pack, 
      path, api_path, prefix, 
      api_alias)
    values (#{configId,jdbcType=BIGINT}, #{tableName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{cover,jdbcType=BIT}, #{moduleName,jdbcType=VARCHAR}, #{pack,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{apiPath,jdbcType=VARCHAR}, #{prefix,jdbcType=VARCHAR}, 
      #{apiAlias,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qhzk.pe.entities.GenConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into code_gen_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        config_id,
      </if>
      <if test="tableName != null">
        table_name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="moduleName != null">
        module_name,
      </if>
      <if test="pack != null">
        pack,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="apiPath != null">
        api_path,
      </if>
      <if test="prefix != null">
        prefix,
      </if>
      <if test="apiAlias != null">
        api_alias,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configId != null">
        #{configId,jdbcType=BIGINT},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=BIT},
      </if>
      <if test="moduleName != null">
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="pack != null">
        #{pack,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="apiPath != null">
        #{apiPath,jdbcType=VARCHAR},
      </if>
      <if test="prefix != null">
        #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="apiAlias != null">
        #{apiAlias,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qhzk.pe.entities.GenConfigCriteria" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from code_gen_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update code_gen_config
    <set>
      <if test="record.configId != null">
        config_id = #{record.configId,jdbcType=BIGINT},
      </if>
      <if test="record.tableName != null">
        table_name = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.cover != null">
        cover = #{record.cover,jdbcType=BIT},
      </if>
      <if test="record.moduleName != null">
        module_name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.pack != null">
        pack = #{record.pack,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.apiPath != null">
        api_path = #{record.apiPath,jdbcType=VARCHAR},
      </if>
      <if test="record.prefix != null">
        prefix = #{record.prefix,jdbcType=VARCHAR},
      </if>
      <if test="record.apiAlias != null">
        api_alias = #{record.apiAlias,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update code_gen_config
    set config_id = #{record.configId,jdbcType=BIGINT},
      table_name = #{record.tableName,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=BIT},
      module_name = #{record.moduleName,jdbcType=VARCHAR},
      pack = #{record.pack,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      api_path = #{record.apiPath,jdbcType=VARCHAR},
      prefix = #{record.prefix,jdbcType=VARCHAR},
      api_alias = #{record.apiAlias,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qhzk.pe.entities.GenConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update code_gen_config
    <set>
      <if test="tableName != null">
        table_name = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=BIT},
      </if>
      <if test="moduleName != null">
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="pack != null">
        pack = #{pack,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="apiPath != null">
        api_path = #{apiPath,jdbcType=VARCHAR},
      </if>
      <if test="prefix != null">
        prefix = #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="apiAlias != null">
        api_alias = #{apiAlias,jdbcType=VARCHAR},
      </if>
    </set>
    where config_id = #{configId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qhzk.pe.entities.GenConfig">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update code_gen_config
    set table_name = #{tableName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=BIT},
      module_name = #{moduleName,jdbcType=VARCHAR},
      pack = #{pack,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      api_path = #{apiPath,jdbcType=VARCHAR},
      prefix = #{prefix,jdbcType=VARCHAR},
      api_alias = #{apiAlias,jdbcType=VARCHAR}
    where config_id = #{configId,jdbcType=BIGINT}
  </update>
</mapper>